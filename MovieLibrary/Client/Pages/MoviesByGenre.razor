@page "/movies/order/bygenre/{genre}"
@page "/movies/order/bygenre/{genre}/{order:int}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MovieLibrary.Shared
@attribute [Authorize]
@inject IMovieService MovieService
@inject IGenreService GenreService
@inject NavigationManager navigate

<PageTitle>MoviesByGenre</PageTitle>

<h1>Movies</h1>

<div>
    Movie filter by genres:
    @for (int i = 0; i < GenreService.Genres.Count; i++)
    {
        @if (i % 15 == 0 && i != 0)
        {
            <a style="margin-right: 10px" href="/movies/order/bygenre/@GenreService.Genres[i].Name">@GenreService.Genres[i].Name</a>

            <br />
        }
        else
        {
            <a style="margin-right: 10px" href="/movies/order/bygenre/@GenreService.Genres[i].Name">@GenreService.Genres[i].Name</a>
        }
    }
</div>

<p style="text-align: center">
    <a class="btn btn-success" href="/movies/0/edit"><i class="bi bi-plus-square-fill"> Create</i></a>
</p>

<table class="table table-dark table-striped table-hover">
    <thead>
        <tr>
            <th>Title<a href="/movies/order/bygenre/@Genre/1"><i class="bi bi-caret-up-fill" style="padding-left: 5px"></i></a><a href="/movies/order/bygenre/@Genre/2"><i class="bi bi-caret-down-fill"></i></a></th>
            <th>Release date<a href="/movies/order/bygenre/@Genre/3"><i class="bi bi-caret-up-fill" style="padding-left: 5px"></i></a><a href="/movies/order/bygenre/@Genre/4"><i class="bi bi-caret-down-fill"></i></a></th>
            <th>Length (mins)<a href="/movies/order/bygenre/@Genre/5"><i class="bi bi-caret-up-fill" style="padding-left: 5px"></i></a><a href="/movies/order/bygenre/@Genre/6"><i class="bi bi-caret-down-fill"></i></a></th>
            <th>Genre/s</th>
            <th>Actor/s</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var movie in MovieService.Movies)
        {
            <tr>
                <td><a href="/movies/@movie.Id">@movie.Title</a></td>
                <td>@movie.ReleaseDate</td>
                <td>@movie.Length</td>
                <td>
                    @for (int i = 0; i < movie.Genres.Count; i++)
                    {

                        @if (i != movie.Genres.Count - 1)
                        {
                            @if (i % 5 == 0 && i != 0)
                            {
                                @($"{movie.Genres[i].Name},")

                                <br />
                            }
                            else
                            {
                                @($"{movie.Genres[i].Name}, ")
                            }
                        }
                        else
                        {
                            @movie.Genres[i].Name
                        }
                    }
                </td>
                <td>
                    @foreach (var actor in movie.Actors)
                    {
                        <a href="/actors/@actor.Id">@actor.Name<br /></a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    [Parameter]
    public int Order { get; set; }
    [Parameter]
    public string? Genre { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        try
        {
            if(Order != 0)
            {
                await MovieService.LoadGenreSortMovies(Genre ?? "", Order);
            }
            else
            {
                await MovieService.LoadSortMovies(Genre ?? "");
            }
            await GenreService.LoadGenres();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

    }
}