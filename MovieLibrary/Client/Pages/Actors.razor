@page "/actors"
@page "/actors/order/{order}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MovieLibrary.Shared
@attribute [Authorize]
@inject IActorService ActorService

<PageTitle>Actors</PageTitle>

<h1>Actors</h1>

<p style="text-align: center">
    <a class="btn btn-success" href="/actors/0/edit"><i class="bi bi-plus-square-fill"> Create</i></a>
</p>

<table class="table table-dark table-striped table-hover">
    <thead>
        <tr>
            <th>Name<a href="/actors/order/name-aorder"><i class="bi bi-caret-up-fill" style="padding-left: 5px"></i></a><a href="/actors/order/name-deorder"><i class="bi bi-caret-down-fill"></i></a></th>
            <th>Born<a href="/actors/order/born-aorder"><i class="bi bi-caret-up-fill" style="padding-left: 5px"></i></a><a href="/actors/order/born-deorder"><i class="bi bi-caret-down-fill"></i></a></th>
            <th>Place of birth<a href="/actors/order/placeofbirth-aorder"><i class="bi bi-caret-up-fill" style="padding-left: 5px"></i></a><a href="/actors/order/placeofbirth-deorder"><i class="bi bi-caret-down-fill"></i></a></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var actor in ActorService.Actors)
        {
            <tr>
                <td><a href="/actors/@actor.Id">@actor.Name</a></td>
                <td>@actor.Born.ToString("d")</td>
                <td>@actor.PlaceOfBirth</td>
            </tr>
        }
    </tbody>
</table>

@code {
    [Parameter]
    public string? Order { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        try
        {
            await ActorService.LoadSortActors(Order ?? "");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}